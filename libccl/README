README for ccl - customizable configuration library
===================================================

ccl is the customizable configuration library, a collection of
functions for application programmers wishing to interface with
user-editable configuration files containing key/value pairs.

ccl is customizable because it allows the comment, key/value, and
string literal delimiters to be programatically specified at runtime.

ccl is designed to be simple and portable; it has a small interface
consisting of five functions and is written in ANSI/ISO C. ccl uses
avl's implemenation of binary search trees for backend storage.

Please send bug reports, suggestions and comments to <sfbooth@earthlink.net>

Visit ccl on the web at http://home.earthlink.net/~sfbooth/ccl/

this package is downloaded from: http://files.sbooth.org/ccl-0.1.1.tar.gz

A usage demo:
#include <stdio.h>
#include <ccl.h>

void usage(const char *prog_name)
{
  printf("usage: %s config_file\n", prog_name);
}

int
main(int argc, char **argv)
{
  struct ccl_t config;
  const struct ccl_pair_t 	*iter;

  if(argc == 1) {
    usage(argv[0]);
    return 0;
  }

  config.comment_char = '#';
  // config.sep_char = '=';
  config.sep_char = ' ';
  config.str_char = '"';

  ccl_parse(&config, argv[1]);

  while((iter = ccl_iterate(&config)) != 0) {
    printf("(%s,%s)\n", iter->key, iter->value);
  }

  ccl_release(&config);

  return 0;
}
